#!/usr/bin/env sh

# the scripting-addition must be loaded manually if
# you are running yabai on macOS Big Sur. Uncomment
# the following line to have the injection performed
# when the config is executed during startup.
#
# for this to work you must configure sudo such that
# it will be able to run the command without password
#
# see this wiki page for information:
#  - https://github.com/koekeishiya/yabai/wiki/Installing-yabai-(latest-release)
#
# sudo yabai --load-sa
# yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"

# grid optioins
# <rows>:<cols>:<start-x>:<start-y>:<width>:<height>

pkill -x yabai
yabai &

yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
sudo yabai --load-sa

yabai -m signal --add event=window_created action="echo \"create \$YABAI_WINDOW_ID\" | nc -U /tmp/yb_$USER.socket"
yabai -m signal --add event=window_destroyed action="echo \"destroy \$YABAI_WINDOW_ID\" | nc -U /tmp/yb_$USER.socket"
yabai -m signal --add event=space_changed action="echo \"query\" | nc -U /tmp/yb_$USER.socket"
yabai -m signal --add event=display_changed action="echo \"query\" | nc -U /tmp/yb_$USER.socket"
yabai -m signal --add event=mission_control_enter action="echo \"mission_control_enter\" | nc -U /tmp/yb_$USER.socket"
yabai -m signal --add event=mission_control_exit action="echo \"mission_control_exit\" | nc -U /tmp/yb_$USER.socket"

# Rules
yabai -m rule --add app="^System Preferences$" manage=off space=9
# yabai -m rule --add app="^NeoHtop$" manage=on layer=above
yabai -m rule --add app="^NeoHtop$" manage=off grid=100:100:0:0:100:100
yabai -m rule --add app="^Bitwarden$" manage=off sticky=on
yabai -m rule --add app="^Raycast$" manage=off
yabai -m rule --add app="^Simulator$" manage=off
yabai -m rule --add app="^Pika$" manage=off
yabai -m rule --add app="^Pika$" manage=off
yabai -m rule --add app="^Grammarly Desktop$" manage=off
yabai -m rule --add app="^Системные настройки$" manage=off
yabai -m rule --add app="^System Settings$" manage=off
yabai -m rule --add app="^Authy Desktop$" manage=off
yabai -m rule --add app="^Dynamic Wallpapper$" manage=off
yabai -m rule --add app="^Kap$" manage=off
yabai -m rule --add app="^Xnip$" manage=off
yabai -m rule --add app="^Hearthstone$" manage=off
yabai -m rule --add app="^Finder$" manage=off
yabai -m rule --add app="^Spotify$" manage=off
yabai -m rule --add app="^Flameshot$" manage=off
yabai -m rule --add app="^zoom.us$" manage=off
yabai -m rule --add app="^Android Emulator.*" manage=off
yabai -m rule --add app="^qemu-system-aarch64" manage=off
yabai -m rule --add app="^OpenVPN Connect$" manage=off
yabai -m rule --add app="^Loom" manage=off
yabai -m rule --add app="^Loom Recorder Settings$" manage=off
yabai -m rule --add app="^Loom Control Menu$" manage=off
yabai -m rule --add title="^Discord Updater$" manage=off
yabai -m rule --add title="^Pearcleaner$" manage=off sticky=on
yabai -m rule --add app="^Arc$" manage=off
yabai -m rule --add app="^$" manage=off
yabai -m signal --add event=window_created app="^Arc$" action="~/.scripts/yabai_apply_arc_rules.sh"
# yabai -m rule --add app="^Arc$" title="^$" mouse_follows_focus=off manage=off
# yabai -m rule --add app="^Arc$" title="" manage=off
# yabai -m rule --add app="^Arc$" title="^$" manage=off
# yabai -m rule --add app="^Arc$" subrole='AXSystemDialog' manage=off mouse_follows_focus=off
# yabai -m rule --add app='^Arc$' title='^Space.*$' manage=off

# yabai -m rule --add app="^World of Warcraft$" manage=off
# yabai -m rule --add app="^World*" manage=off
yabai -m rule --add app=Emacs manage=on space=5
yabai -m rule --add label=emacs app=Emacs manage=on space=5
# yabai -m rule --add app="^Emacs$" title="^.*$" manage=on space=4
# yabai -m rule --add app="Emacs" title="^$" manage=off
# yabai -m rule --add app="Emacs" title="" manage=off label="email popup"
# yabai -m rule --add app="Emacs" title="^\$" manage=off label="emacs popup 2"
# yabai -m rule --add app="Emacs" title="^$" manage=off label="emacs popup 2"
# yabai -m rule --add app="Emacs" title=".+" manage=on space=5 label="emacs main"
yabai -m rule --add app=Firefox manage=on space=4
# yabai -m rule --add app=Marta manage=on space=8
yabai -m rule --add app="Brave Browser" manage=on space=3
yabai -m rule --add app="^Marta$" manage=off grid=4:4:2:0:2:4
yabai -m rule --add app="^spotube$" manage=off grid=100:100:5:7:84:84 space=6
yabai -m rule --add app="^iPhone Mirroring$" manage=off grid=100:100:72:20:10:10 space=7
yabai -m rule --add app="^Session$" manage=off grid=100:100:66:28:30:40 space=7
yabai -m rule --add app="^TickTick$" manage=off grid=100:100:4:4:45:80 space=7
yabai -m rule --add app="^App Store$" manage=off sticky=on
yabai -m rule --add app=Firefox manage=on space=3

yabai -m rule --add app="^Google Chrome$" manage=on space=4
yabai -m rule --add app="^kitty$" manage=on space=2
yabai -m rule --add app="WezTerm" manage=on space=2
yabai -m rule --add app="^Telegram$" manage=on space=1
yabai -m rule --add app=Ferdi manage=on space=1
yabai -m rule --add app=Skype manage=on space=1
yabai -m rule --add app=Slack manage=on space=1
yabai -m rule --add app=Mattermost manage=on space=1
yabai -m rule --add app="^Whalebird$" manage=on space=7
yabai -m rule --add app="^Discord$" manage=on space=1
yabai -m rule --add app="^Spark$" manage=off space=8 sticky=off
yabai -m rule --add app="^MongoDB Compass" manage=on space=9
yabai -m rule --add app="^WebTorrent" manage=on space=10
yabai -m rule --add app="^ChatGPT$" manage=on space=9
yabai -m rule --add app="^Books$" manage=on space=7
yabai -m rule --add app="^Obsidian$" manage=on space=8

# yabai -m rule --add app="^Doom Emacs$" manage=off
# yabai -m rule --add app="^Emacs$" manage=off

# global settings
yabai -m config mouse_follows_focus off
yabai -m config focus_follows_mouse off
yabai -m config window_placement second_child
# yabai -m config window_topmost off
yabai -m config window_shadow off
yabai -m config window_opacity off
# yabai -m config window_opacity_duration      0.0
yabai -m config active_window_opacity 0.9
yabai -m config normal_window_opacity 0.80
yabai -m config split_ratio 0.50
yabai -m config auto_balance off
yabai -m config mouse_modifier fn
yabai -m config mouse_action1 move
yabai -m config mouse_action2 resize
yabai -m config mouse_drop_action swap
# yabai -m config window_border                off
# yabai -m config window_border                on
# general space settings
yabai -m config layout bsp
# yabai -m config top_padding                  32
# yabai -m config bottom_padding               16
# yabai -m config left_padding                 16
# yabai -m config right_padding                16
# yabai -m config window_gap                   16

yabai -m config top_padding 36
yabai -m config bottom_padding 20
yabai -m config left_padding 20
yabai -m config right_padding 20
yabai -m config window_gap 20

# Space names
yabai -m space 1 --label social
yabai -m space 2 --label term
yabai -m space 3 --label www
yabai -m space 4 --label other

yabai -m space 5 --label dev
yabai -m space 6 --label entertainment
yabai -m space 7 --label thrash
yabai -m space 8 --label study
yabai -m space 9 --label t3
yabai -m space 10 --label load

# Spacebar
# # Refresh spaces widget on space change
# yabai -m signal --add event=space_changed action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-spaces-jsx\"'"
# # Refresh spaces widget on display focus change
# yabai -m signal --add event=display_changed action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-spaces-jsx\"'"
# # Refresh spaces widget on window resize
# yabai -m signal --add event=window_resized action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-spaces-jsx\"'"
# # Refresh process widget on space change
# yabai -m signal --add event=space_changed action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-process-jsx\"'"

# # Refresh process widget on when focused application changes
# yabai -m signal --add event=window_focused action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-process-sx\"'"
# # Refresh spaces widget on when focused application changes
# yabai -m signal --add event=window_focused action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-spaces-jsx\"'"

# # Refresh process widget on when focused application changes
# yabai -m signal --add event=application_front_switched action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-process-jsx\"'"
# # Refresh spaces widget on when focused application changes
# yabai -m signal --add event=application_front_switched action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-spaces-jsx\"'"

# # Refresh process widget on when an application window is closed
# yabai -m signal --add event=window_destroyed action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-process-jsx\"'"
# # Refresh spaces widget on when an application window is closed
# yabai -m signal --add event=window_destroyed action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-spaces-jsx\"'"

# Refresh process widget when current window title changes
# yabai -m signal --add event=window_title_changed action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-process-jsx\"'"

# Replaced by borders
# yabai -m config window_border                on
# yabai -m config window_border_width          4
# yabai -m config active_window_border_color   0xff4faaea
# yabai -m config normal_window_border_color   0xff0e4b77
# yabai -m config insert_feedback_color        0xffd75f5f

# Stackline
# STACKLINE_EVENTS="\
#     application_activated \
#     application_front_switched \
#     application_hidden \
#     application_launched \
#     application_terminated \
#     application_visible \
#     window_created \
#     window_deminimized \
#     window_focused \
#     window_minimized \
#     window_resized"

# yabai -m signal --add \
#     event="window_destroyed" \
#     label="stackline_window_destroyed" \
#     action="echo ':window_destroyed' | /usr/local/bin/hs -m stackline-events"

# for event in $STACKLINE_EVENTS
# do
#     yabai -m signal --add \
#         event="$event" \
#         label="stackline_$event" \
#         app!="Hammerspoon" \
#         action="echo ':$event' | /usr/local/bin/hs -m stackline-events"
# done

# WAL
# source ~/.cache/wal/colors.sh # pywal scheme - update if needed

# yabai template colours
CBACK=$(echo $background | sed 's/#//')
CFORE=$(echo $foreground | sed 's/#//')
CACTV=$(echo $color3 | sed 's/#//')
CNORM=$(echo $color1 | sed 's/#//')
CINSE=$(echo $foreground | sed 's/#//')

# yabai -m config status_bar on
# yabai -m config status_bar_background_color  0xff$CBACK
# yabai -m config status_bar_foreground_color  0xff$CFORE

# yabai -m config window_border_width          4
# yabai -m config active_window_border_color   0xff$CACTV
# yabai -m config active_window_border_color   0xff4faaea
# yabai -m config normal_window_border_color   0xff0e4b77
# yabai -m config insert_feedback_color        0xffd75f5f
# yabai -m config window_border_blur on

# Events for sketchybar
# yabai -m signal --add event=window_focused action="sketchybar --trigger window_focus"
# yabai -m signal --add event=window_created action="sketchybar --trigger windows_on_spaces"
# yabai -m signal --add event=window_destroyed action="sketchybar --trigger windows_on_spaces"
# borders blacklist="Loom,qemu-system-aarch64,Simulator,iPhone Mirroring" active_color=0xffe78284 inactive_color=0xfff2d5cf width=5.0 2>/dev/null 1>&2 &
# borders whitelist="Marta,Spotify,Emacs,session,TickTick,Mattermost,Telegram,spotube,wezterm-gui,Obsidian,Discord,Arc,Google Chrome" active_color=0xffe78284 inactive_color=0xfff2d5cf width=5.0 2>/dev/null 1>&2 &
# borders whitelist="Marta,Spotify,Emacs,session,TickTick,Mattermost,Telegram,spotube,wezterm-gui,Obsidian,Discord,Arc,Google Chrome" active_color=0xffe78284 inactive_color=0xfff2d5cf width=5.0 2>/dev/null 1>&2 &

# $HOME/apps/JankyBorders/bin/borders \
    # yabai -m query --windows | jq '.[] | {id: .id, app: .app, title: .title, floating: ."is-floating", space: .id, sticky: ".is-sticky"}'
borders \
"active_color=gradient(top_left=0xffff7f50,bottom_right=0xff00bfff)" \
  "inactive_color=gradient(top_left=0xfff2d5cf,bottom_right=0xff87ceeb)" \
  blacklist="Loom,qemu-system-aarch64,Simulator,iPhone\ Mirroring" \
  width=4.0 \
  hidpi=on \

# Float windows bug
# yabai -m signal --add event=window_created action='
#   yabai -m query --windows --window $YABAI_WINDOW_ID | jq -er ".\"can-resize\" or .\"is-floating\"" || \
#   yabai -m window $YABAI_WINDOW_ID --toggle float && \
#   yabai -m window $YABAI_WINDOW_ID --layer above && \
#   yabai -m window $YABAI_WINDOW_ID --grid 3:3:1:1:1:1
# '

python3 $HOME/.config/yabai/order-windows.py
$HOME/.config/yabai/visit-all-windows.sh
$HOME/.config/yabai/stack-windows.sh

echo "yabai configuration loaded.."

yabai -m signal --add event=mission_control_exit action='echo "refresh" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=display_added action='echo "refresh" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=display_removed action='echo "refresh" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_created action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_destroyed action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_focused action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_moved action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_resized action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_minimized action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_deminimized action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'

# Window specifinc configs

yabai -m space 6 --gap rel:32
yabai -m space 6 --padding abs:64:64:64:64

yabai -m space 2 --gap rel:32
yabai -m space 2 --padding abs:64:64:64:64

# focus window after active space changes
# yabai -m signal --add event=space_changed action="yabai -m window --focus \$(yabai -m query --windows --space | jq .[0].id)"
yabai -m signal --add event=space_changed action='yabai -m window --focus $(yabai -m query --windows --space | jq -r ".[0].id")'


# Ghostty
yabai -m signal --add app='^Ghostty$' event=window_created action='yabai -m space --focus next; sleep 0.01; yabai -m space --focus prev'
yabai -m signal --add app='^Ghostty$' event=window_destroyed action='yabai -m space --focus next; sleep 0.01; yabai -m space --focus prev'
yabai -m signal --add app='^Finder$' event=window_created action='yabai -m space --focus next; sleep 0.01; yabai -m space --focus prev'
yabai -m signal --add app='^Finder$' event=window_destroyed action='yabai -m space --focus next; sleep 0.01; yabai -m space --focus prev'

# sketchybar --bar hidden=on

# # focus window after active display changes
# yabai -m signal --add event=display_changed action="yabai -m window --focus \$(yabai -m query --windows --space | jq .[0].id)"

