# Helix Configuration
# Adapted from user's NeoVim configuration
# Using transparent background theme
theme = "my"


[editor]
# Main editor settings
line-number = "relative"
gutters = ["diagnostics", "spacer", "line-numbers", "diff"]
mouse = true
middle-click-paste = true
scroll-lines = 3
shell = ["/usr/bin/env", "fish", "-c"]
text-width = 80
workspace-lsp-roots = [".git", ".hg", "Cargo.toml", "package.json", "go.mod"]
preview-completion-insert = true
completion-trigger-len = 2
auto-completion = true
auto-format = true
auto-save = false
idle-timeout = 400
completion-timeout = 250
clipboard-provider = "pasteboard"

# Indentation settings (adapted from NeoVim: tabstop=2, shiftwidth=2, expandtab)
[editor.indent-guides]
render = true
character = "╎"
skip-levels = 1

[editor.statusline]
left = ["mode", "spinner", "file-name", "file-modification-indicator"]
center = []
right = ["diagnostics", "selections", "register", "position", "file-encoding"]

[editor.lsp]
enable = true
display-messages = true
auto-signature-help = true
display-inlay-hints = true
display-signature-help-docs = true
snippets = true
goto-reference-include-declaration = true

[editor.cursor-shape]
insert = "bar"
normal = "block"
select = "underline"

[editor.file-picker]
hidden = false
follow-symlinks = true
deduplicate-links = true
parents = true
ignore = true
git-ignore = true
git-global = true
git-exclude = true

[editor.auto-pairs]
'(' = ')'
'{' = '}'
'[' = ']'
'"' = '"'
'`' = '`'
'<' = '>'

[editor.search]
smart-case = true
wrap-around = true

[editor.whitespace]
render = "all"

[editor.whitespace.characters]
space = "·"
nbsp = "⍽"
tab = "→"
newline = "⏎"

[editor.soft-wrap]
enable = false

# Keybinding adaptation from NeoVim
[keys.normal]
# Window navigation (from NeoVim: <C-.>)
"C-." = "rotate_view"

# AI
C-a = [":sh unibear add_file %{buffer_name}"]

# File saving (from NeoVim: <C-s>)
"C-s" = ":write"

# Window resizing (from NeoVim: <S-h>, <S-l>, <S-j>, <S-k>)
"S-h" = "swap_view_left"
"S-l" = "swap_view_right" 
"S-j" = "swap_view_down"
"S-k" = "swap_view_up"

# Character navigation restored to default
# f, F, t, T work across lines (enhanced from Vim)

# LSP
"K" = "hover"

# Terminal (from toggleterm)
"F12" = [":new", ":insert-output $SHELL", ":buffer-close!", ":redraw"]

y = "yank_to_clipboard"
Y = "yank"  
# LSP navigation
[keys.normal.g]
"d" = "goto_definition"
"r" = "goto_reference"
"i" = "goto_implementation"
"t" = "goto_type_definition"
# Word jumping (hop.nvim equivalent)
"w" = "goto_word"

[keys.normal.space]
# System clipboard copy/paste (from NeoVim: <Leader>y, <Leader>p)
"y" = "yank_to_clipboard"
"p" = "paste_clipboard_after"

# Buffer close (from NeoVim: <Leader>q)
"q" = ":buffer-close"

# Quit all buffers (from NeoVim: <Leader>Q)  
"Q" = ":quit-all"

# Commenting (Comment.nvim equivalent)
"/" = "toggle_comments"

# File explorer (built-in Helix 25.07+)
"e" = "file_explorer"

# Buffer navigation (from NeoVim: <space>b], <space>b[)
[keys.normal.space.b]
"]" = "goto_next_buffer"
"[" = "goto_previous_buffer" 
"q" = ":buffer-close"

# Config reload (from NeoVim: <space>hre)
[keys.normal.space.h.r]
"e" = ":config-reload"

# Window splitting (from NeoVim: <space>wv, <space>ws)
[keys.normal.space.w]
"v" = "vsplit"
"s" = "hsplit"

# Compilation/execution (from NeoVim: <space>meb)
[keys.normal.space.m.e]
"b" = ":sh luafile %"

# File manager and pickers (Telescope equivalent)
[keys.normal.space.f]
"f" = "file_picker"
"g" = "global_search"
"b" = "buffer_picker"
"s" = "workspace_symbol_picker"
"e" = "file_explorer"
"d" = ":sh yazi && printf '\\033c'"

# Git commands (NeoVim neogit/gitsigns equivalent)  
[keys.normal.space.g]
"G" = [
    ":write-all",
    ":insert-output lazygit >/dev/tty",
    ":redraw",
    ":reload-all"
]
"u" = [
    ":write-all", 
    ":new", 
    ":insert-output gitui >/dev/tty", 
    ":set mouse false", 
    ":set mouse true",
    ":buffer-close!", 
    ":redraw", 
    ":reload-all"
]
"s" = [":new", ":insert-output git status", ":buffer-close!", ":redraw"]
"l" = [":new", ":insert-output git log --oneline -10", ":buffer-close!", ":redraw"]
"d" = [":new", ":insert-output git diff", ":buffer-close!", ":redraw"]

# LSP commands
[keys.normal.space.c]
"a" = "code_action"
"r" = "rename_symbol"
"f" = "format_selections"

[keys.insert]
# Save from insert mode (from NeoVim: <C-s>)
"C-s" = ["normal_mode", ":write"]

# Window navigation from insert mode
"C-." = ["normal_mode", "rotate_view"]

"C-g" = [
    ":write-all", 
    ":new", 
    ":insert-output gitui >/dev/tty", 
    ":set mouse false", 
    ":set mouse true",
    ":buffer-close!", 
    ":redraw", 
    ":reload-all"
]

[keys.select]
# Commenting in selection mode
"/" = "toggle_comments"


